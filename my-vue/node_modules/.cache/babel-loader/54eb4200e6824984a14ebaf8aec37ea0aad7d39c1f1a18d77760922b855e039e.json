{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useRouter } from \"vue-router\";\nimport { reactive } from \"vue\";\nimport instance from \"@/axios\";\nimport { ElMessage } from \"element-plus\";\nexport default {\n  __name: 'IndexPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const form = reactive({\n      name: \"\",\n      password: \"\"\n    });\n    const login = async () => {\n      instance.post(\"http://localhost:8080/login\", {\n        name: form.name,\n        password: form.password\n      }).then(res => {\n        if (res.data.code === 200) {\n          router.push(\"/home\");\n        } else {\n          ElMessage.error(res.data.message);\n        }\n      });\n    };\n    const register = async () => {\n      await router.push(\"/register\");\n    };\n    const __returned__ = {\n      router,\n      form,\n      login,\n      register,\n      get useRouter() {\n        return useRouter;\n      },\n      reactive,\n      get instance() {\n        return instance;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useRouter","reactive","instance","ElMessage","router","form","name","password","login","post","then","res","data","code","push","error","message","register"],"sources":["/Users/banzhijiangshan/Desktop/my-vue/src/components/IndexPage.vue"],"sourcesContent":["<template>\n  <div>\n    <el-main class=\"el-main\">\n      <el-image\n        :src=\"require('@/assets/back.png')\"\n        style=\"margin: 0; position: absolute; height: 100%; width: 100%\"\n      ></el-image>\n      <el-row class=\"el-row\">\n        <el-col>\n          <div class=\"radius\">\n            <el-form :model=\"form\" label-width=\"auto\" size=\"large\">\n              <br />\n              <br />\n              <el-form-item style=\"display: inline-block; width: 80%\">\n                <el-input\n                  class=\"el-input\"\n                  maxlength=\"30\"\n                  show-word-limit\n                  placeholder=\"学号\"\n                  v-model=\"form.name\"\n                />\n              </el-form-item>\n              <el-form-item style=\"display: inline-block; width: 80%\">\n                <el-input\n                  class=\"el-input\"\n                  maxlength=\"30\"\n                  show-word-limit\n                  placeholder=\"密码\"\n                  show-password\n                  v-model=\"form.password\"\n                  type=\"password\"\n                />\n              </el-form-item>\n\n              <el-row>\n                <el-col :span=\"8\" :offset=\"4\">\n                  <el-button\n                    type=\"primary\"\n                    class=\"button-class\"\n                    round\n                    @click=\"login\"\n                    >登录</el-button\n                  >\n                </el-col>\n                <el-col :span=\"8\">\n                  <el-button\n                    type=\"success\"\n                    class=\"button-class\"\n                    round\n                    @click=\"register\"\n                    >注册</el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-form>\n          </div>\n        </el-col>\n      </el-row>\n    </el-main>\n  </div>\n</template>\n\n<script setup>\nimport { useRouter } from \"vue-router\";\nimport { reactive } from \"vue\";\nimport instance from \"@/axios\";\nimport { ElMessage } from \"element-plus\";\n\nconst router = useRouter();\n\nconst form = reactive({\n  name: \"\",\n  password: \"\",\n});\n\nconst login = async () => {\n  instance\n    .post(\"http://localhost:8080/login\", {\n      name: form.name,\n      password: form.password,\n    })\n    .then((res) => {\n      if (res.data.code === 200) {\n        router.push(\"/home\");\n      } else {\n        ElMessage.error(res.data.message);\n      }\n    });\n};\nconst register = async () => {\n  await router.push(\"/register\");\n};\n</script>\n\n<style scoped>\n.radius {\n  height: 45%;\n  width: 32%;\n  border: 1px solid var(--el-border-color);\n  border-radius: 20px;\n  margin-top: 19%;\n  margin-left: 63%;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.5);\n  text-align: center;\n  background-color: #daf3f1 !important;\n}\n\n.el-main {\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n}\n\n.el-row {\n  margin-top: 10px;\n  margin-bottom: 80px;\n}\n\n.el-input {\n  text-align: center;\n  vertical-align: middle;\n}\n\n.button-class {\n  width: 70%;\n  height: 80%;\n  text-align: center;\n  font-size: 20px;\n  background-color: #1677ff;\n  border-radius: 7px !important;\n}\n</style>\n"],"mappings":";AA+DA,SAASA,SAAS,QAAQ,YAAY;AACtC,SAASC,QAAQ,QAAQ,KAAK;AAC9B,OAAOC,QAAQ,MAAM,SAAS;AAC9B,SAASC,SAAS,QAAQ,cAAc;;;;;;;IAExC,MAAMC,MAAM,GAAGJ,SAAS,CAAC,CAAC;IAE1B,MAAMK,IAAI,GAAGJ,QAAQ,CAAC;MACpBK,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,MAAMC,KAAK,GAAG,MAAAA,CAAA,KAAY;MACxBN,QAAQ,CACLO,IAAI,CAAC,6BAA6B,EAAE;QACnCH,IAAI,EAAED,IAAI,CAACC,IAAI;QACfC,QAAQ,EAAEF,IAAI,CAACE;MACjB,CAAC,CAAC,CACDG,IAAI,CAAEC,GAAG,IAAK;QACb,IAAIA,GAAG,CAACC,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;UACzBT,MAAM,CAACU,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC,MAAM;UACLX,SAAS,CAACY,KAAK,CAACJ,GAAG,CAACC,IAAI,CAACI,OAAO,CAAC;QACnC;MACF,CAAC,CAAC;IACN,CAAC;IACD,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMb,MAAM,CAACU,IAAI,CAAC,WAAW,CAAC;IAChC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}